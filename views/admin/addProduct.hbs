<!DOCTYPE html>
<html lang="en">
<head>
  <title>Add Products</title>
 <link rel="preconnect" href="https://fonts.gstatic.com">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
  <style media="screen">
    *,
    *:before,
    *:after {
      padding: 0;
      margin: 0;
      box-sizing: border-box;
    }

    body {
      background-color: #080710;
    }

    .background {
      width: 430px;
      height: 520px;
      position: absolute;
      transform: translate(-50%, -50%);
      left: 50%;
      top: 50%;
    }

    .background .shape {
      height: 200px;
      width: 200px;
      position: absolute;
      border-radius: 50%;
    }

    .shape:first-child {
      background: linear-gradient(#1845ad, #23a2f6);
      left: -80px;
      top: -80px;
    }

    .shape:last-child {
      background: linear-gradient(to right, #ff512f, #f09819);
      right: -30px;
      bottom: -80px;
    }

    form {
      height: auto;
      width: 400px;
      background-color: rgba(255, 255, 255, 0.13);
      position: absolute;
      transform: translate(-50%, -50%);
      top: 50%;
      left: 50%;
      border-radius: 10px;
      backdrop-filter: blur(10px);
      border: 2px solid rgba(255, 255, 255, 0.1);
      box-shadow: 0 0 40px rgba(8, 7, 16, 0.6);
      padding: 50px 35px;
    }

    form * {
      font-family: 'Poppins', sans-serif;
      color: #ffffff;
      letter-spacing: 0.5px;
      outline: none;
      border: none;
    }

    form h3 {
      font-size: 32px;
      font-weight: 500;
      line-height: 42px;
      text-align: center;
    }

    label {
            display: block;
            font-size: 10px;
            font-weight: 300;
        }

    input {
            display: block;
            height: 25px;
            width: 100%;
            background-color: rgba(255, 255, 255, 0.07);
            border-radius: 3px;
            padding: 0 10px;
            margin-top: 8px;
            font-size: 14px;
            font-weight: 300;
        }
    select {
      display: block;
      height: 30px;
      width: 100%;
      background-color: rgba(255, 255, 255, 0.07);
      border-radius: 3px;
      padding: 0 10px;
      margin-top: 8px;
      font-size: 14px;
      font-weight: 300;
    }

    ::placeholder {
      color: #e5e5e5;
    }

    button {
            margin-top: 40px;
            width: 100%;
            background-color: #ffffff;
            color: #080710;
            padding: 12px 0;
            font-size: 15px;
            font-weight: 400;
            border-radius: 3px;
            cursor: pointer;
        }

    .is-invalid {
      border-color: red;
    }

    .error-message {
      color: red;
      font-size: 12px;
    }
     .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgb(0, 0, 0);
      background-color: rgba(0, 0, 0, 0.4);
      padding-top: 60px;
    }

    .modal-content {
      background-color: #fefefe;
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 700px;
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }
    option{
      color: #080710;
    }
  </style>
</head>

<body>
  <div class="background">
    <div class="shape"></div>
    <div class="shape"></div>
  </div>
  <form id="productForm" action="/admin/addProduct" method="post" enctype="multipart/form-data">
    <h3>Add Products</h3>

    <label for="">Product Name</label>
    <input type="text" name="pname" placeholder="Product Name" id="pname" onblur="validateProductName()">
    <span id="pnameError" class="error-message"></span>
    
    <label for="">Product Images</label>
    <input type="file" name="image" id="img" multiple>
    <span id="imgError" class="error-message"></span>

    <button type="button" id="previewBtn" style="margin-top: 5px ; width: 100%;background-color: #ffffff;color: #080710;padding: 6px 0;font-size: 15px;font-weight: 500;border-radius: 1px;cursor: pointer;">Preview Images</button>
    
    <label for="">Description</label>
    <input type="text" name="description" placeholder="Description" id="description">
    <span id="descriptionError" class="error-message"></span>
    
    <label for="">Price</label>
    <input type="number" name="price" placeholder="Price" id="price">
    <span id="priceError" class="error-message"></span>
    
    <label for="">Discount</label>
    <input type="number" name="discount" placeholder="Discount" id="discount" min="0" max="90">
    <span id="discountError" class="error-message"></span>
    
    <label for="">Stock</label>
    <input type="number" name="purchase" placeholder="Stock" id="purchase">
    <span id="purchaseError" class="error-message"></span>
    
    <label for="cat">Choose Category</label>
    <select id="cat" name="category">
      <option value="" disabled selected>Choose Category</option>
      {{#each categories}}
      <option value="{{this.cname}}">{{this.cname}}</option>
      {{/each}}
    </select>
    <span id="catError" class="error-message"></span>
    
    {{#if exist}}
    <p style="color: red;">Product Already Exists</p>
    {{/if}}
    
    <button type="submit">Add Products</button>
  </form>

  <div id="myModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <div>
        <img id="image" style="max-width: 100%;">
      </div>
      <button id="cropBtn">Crop</button>
    </div>
  </div>

  <div id="previewModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <div>
        <img id="previewImage" style="max-width: 100%;">
      </div>
      <button id="prevBtn">Previous</button>
      <button id="nextBtn">Next</button>
      <button id="deleteBtn">Delete</button>
    </div>
  </div>

 <script>
  async function validateProductName() {
    const pname = document.getElementById("pname").value;
    const pnameError = document.getElementById("pnameError");
    console.log(pname)
     try {
        const response = await fetch("/admin/ProductExist", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ pname })
        });

        const data = await response.json();

        if (data.exists) {
          pnameError.textContent = "Product name already exists.";
          document.getElementById("pname").classList.add('is-invalid');
        } else {
          pnameError.textContent = "";
          document.getElementById("pname").classList.remove('is-invalid');
        }
      } catch (error) {
        console.error("Error validating product name:", error);
      }

  }

    document.getElementById('productForm').addEventListener('submit', function(event) {
      event.preventDefault();
      var form = event.target;
      var isValid = true;

      // Reset all error messages
      document.querySelectorAll('.error-message').forEach(function(element) {
        element.textContent = '';
      });

      // Reset invalid class
      form.querySelectorAll('.is-invalid').forEach(function(element) {
        element.classList.remove('is-invalid');
      });

      // Validate each input field
      var pname = document.getElementById('pname');
      var img = document.getElementById('img');
      var description = document.getElementById('description');
      var price = document.getElementById('price');
      var discount = document.getElementById('discount');
      var purchase = document.getElementById('purchase');
      var cat = document.getElementById('cat');

      if (!pname.value.trim()) {
        isValid = false;
        pname.classList.add('is-invalid');
        document.getElementById('pnameError').textContent = 'Product Name is required.';
      }

      if (!img.value) {
        isValid = false;
        img.classList.add('is-invalid');
        document.getElementById('imgError').textContent = 'Image is required.';
      }

      if (!description.value.trim()) {
        isValid = false;
        description.classList.add('is-invalid');
        document.getElementById('descriptionError').textContent = 'Description is required.';
      }

      if (!price.value.trim()) {
        isValid = false;
        price.classList.add('is-invalid');
        document.getElementById('priceError').textContent = 'Price is required.';
      }

      if (!discount.value.trim()) {
        isValid = false;
        discount.classList.add('is-invalid');
        document.getElementById('discountError').textContent = 'Discount is required.';
      }

      if (!purchase.value.trim()) {
        isValid = false;
        purchase.classList.add('is-invalid');
        document.getElementById('purchaseError').textContent = 'Stock is required.';
      }

      if (!cat.value.trim()) {
        isValid = false;
        cat.classList.add('is-invalid');
        document.getElementById('catError').textContent = 'Category is required.';
      }

      if (isValid) {
        form.submit();
      } 
      {{!-- else {
        alert('Please fill out all required fields.');
      } --}}
    });
  </script>
  <script>
    var modal = document.getElementById("myModal");
    var span = document.getElementsByClassName("close")[0];
    var cropper;
    var image = document.getElementById('image');
    var input = document.getElementById('img');
    var cropBtn = document.getElementById('cropBtn');

    var currentIndex = 0;
    var fileList;
    var croppedFiles = [];

    input.addEventListener('change', function (e) {
      fileList = e.target.files;
      currentIndex = 0;
      croppedFiles = [];
      showNextImage();
    });

    span.onclick = function () {
      modal.style.display = "none";
      if (cropper) {
        cropper.destroy();
      }
    };

    cropBtn.addEventListener('click', function () {
      var canvas = cropper.getCroppedCanvas({
        width: 400,
        height: 400,
      });
      canvas.toBlob(function (blob) {
        var file = new File([blob], 'cropped_image_' + currentIndex + '.png', { type: 'image/png' });
        croppedFiles.push(file);

        currentIndex++;
        if (currentIndex < fileList.length) {
          showNextImage();
        } else {
          modal.style.display = "none";
          var dataTransfer = new DataTransfer();
          croppedFiles.forEach(function (file) {
            dataTransfer.items.add(file);
          });
          input.files = dataTransfer.files;
          if (cropper) {
            cropper.destroy();
          }
        }
      });
    });

    function showNextImage() {
      if (currentIndex >= fileList.length) {
        return;
      }
      var reader = new FileReader();
      reader.onload = function (event) {
        image.src = event.target.result;
        modal.style.display = "block";
        if (cropper) {
          cropper.destroy();
        }
        cropper = new Cropper(image, {
          aspectRatio: 1,
          viewMode: 1,
        });
      };
      reader.readAsDataURL(fileList[currentIndex]);
    }
  </script>
  <script>
    var input = document.getElementById('img');
    var previewBtn = document.getElementById('previewBtn');
    var previewModal = document.getElementById("previewModal");
    var previewImage = document.getElementById('previewImage');
    var prevBtn = document.getElementById('prevBtn');
    var nextBtn = document.getElementById('nextBtn');
    var deleteBtn = document.getElementById('deleteBtn');
    var fileList;
    var previewIndex = 0;

    // Open preview modal and update file input
    previewBtn.addEventListener('click', function () {
      if (input.files && input.files.length > 0) {
        fileList = Array.from(input.files);
        previewIndex = 0;
        showPreviewImage(previewIndex);
        previewModal.style.display = "block";
      }
    });

    // Close preview modal
    function closePreviewModal() {
      previewModal.style.display = "none";
    }

    // Show previous image in preview
    prevBtn.addEventListener('click', function () {
      if (previewIndex > 0) {
        previewIndex--;
        showPreviewImage(previewIndex);
      }
    });

    // Show next image in preview
    nextBtn.addEventListener('click', function () {
      if (previewIndex < fileList.length - 1) {
        previewIndex++;
        showPreviewImage(previewIndex);
      }
    });

    // Delete selected image from preview
    deleteBtn.addEventListener('click', function () {
      if (fileList && fileList.length > 0) {
        fileList.splice(previewIndex, 1);
        if (fileList.length > 0) {
          previewIndex = Math.min(previewIndex, fileList.length - 1);
          showPreviewImage(previewIndex);
        } else {
          closePreviewModal();
        }
        updateOriginalFileInput();
      }
    });

    // Update original file input with selected files
    function updateOriginalFileInput() {
      var dataTransfer = new DataTransfer();
      fileList.forEach(function (file) {
        dataTransfer.items.add(file);
      });
      input.files = dataTransfer.files;
    }

    // Show selected image in preview modal
    function showPreviewImage(index) {
      var reader = new FileReader();
      reader.onload = function (event) {
        previewImage.src = event.target.result;
      };
      reader.readAsDataURL(fileList[index]);
    }

    // Handle file input change for original file selection
    input.addEventListener('change', function (e) {
      fileList = Array.from(e.target.files);
      previewIndex = 0;
      showPreviewImage(previewIndex);
    });

    // Close modal on close button click
    var closeBtns = document.getElementsByClassName("close");
    for (var i = 0; i < closeBtns.length; i++) {
      closeBtns[i].addEventListener('click', function () {
        closePreviewModal();
      });
    }
  </script>

</body>
</html>
