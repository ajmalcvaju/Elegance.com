
   <!DOCTYPE html>
<html lang="en">

<head>
    <title>Signup</title>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;600&display=swap" rel="stylesheet">
    <!-- Stylesheet -->
    <style media="screen">
        
        *,
        *:before,
        *:after {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }

        body {
            background-color: #080710;
            font-family: 'Poppins', sans-serif;
        }

        .background {
            width: 100%;
            height: 100%;
            position: absolute;
            left: 0;
            top: 0;
            z-index: -1;
        }

        .background .shape {
            height: 200px;
            width: 200px;
            position: absolute;
            border-radius: 50%;
        }

        .shape:first-child {
            background: linear-gradient(#1845ad,
                    #23a2f6);
            left: -80px;
            top: -80px;
        }

        .shape:last-child {
            background: linear-gradient(to right,
                    #ff512f,
                    #f09819);
            right: -30px;
            bottom: -80px;
        }

        form {
            width: 90%;
            max-width: 400px;
            background-color: rgba(255, 255, 255, 0.13);
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            border-radius: 10px;
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 0 40px rgba(8, 7, 16, 0.6);
            padding: 25px 35px;
        }

        form * {
            color: #ffffff;
            outline: none;
            border: none;
        }

        form h3 {
            font-size: 32px;
            font-weight: 500;
            line-height: 42px;
            text-align: center;
            margin-bottom: 20px;
        }

        input {
            display: block;
            height: 25px;
            width: 100%;
            background-color: rgba(255, 255, 255, 0.07);
            border-radius: 3px;
            padding: 0 10px;
            font-size: 14px;
            font-weight: 300;
        }

        input[type="file"] {
            height: auto;
        }

        ::placeholder {
            color: #e5e5e5;
        }

        button {
            margin-top: 30px;
            width: 100%;
            background-color: #ffffff;
            color: #080710;
            padding: 15px 0;
            font-size: 18px;
            font-weight: 600;
            border-radius: 5px;
            cursor: pointer;
        }

        label {
      display: block;
      font-size: 10px;
      font-weight: 400;
    }

        /* Media Queries */
        @media screen and (max-width: 768px) {
            form {
                width: 85%;
            }

            form h3 {
                font-size: 28px;
                line-height: 38px;
            }

            input {
                height: 40px;
            }

            button {
                margin-top: 25px;
            }

            
        }

        @media screen and (max-width: 576px) {
            form {
                width: 80%;
            }

            input {
                height: 35px;
            }

            
        }
    </style>
</head>

<body>
    <div class="background">
        <div class="shape"></div>
        <div class="shape"></div>
    </div>
    <form id="signupForm" action="/signup" method="post" enctype="multipart/form-data">
        <h3>Signup Here</h3>

        <label for="">Username</label>
        <input type="text" name="username" id="username" placeholder="Username" onblur="validateUsername()">
        <span id="usernameError" style="color: red;"></span>
         
         <label for="">First Name</label>
        <input type="text" id="fname" name="fname" placeholder="First Name">
        <span id="fnameError" style="color: red;"></span>
 
        <label for="">Last Name</label>
        <input type="text" id="lname" name="lname" placeholder="Last Name">
        <span id="lnameError" style="color: red;"></span>

        <label for="">Email</label>
        <input type="text" name="email" id="email" placeholder="Email" onblur="validateEmail(this.value)">
        <span id="emailError" style="color: red;"></span>
        
        <label for="">Mobile Number</label>
        <input type="text" name="mobileNumber" id="mobileNumber" placeholder="Mobile Number"
            onblur="validateMobileNumber(this.value)">
        <span id="mobileNumberError" style="color: red;"></span>
        
        <label for="">Image</label>
        <input type="file" name="image" id="img">
        <span id="imageError" style="color: red;"></span>
        
        <label for="">Password</label>
        <input type="password" name="password" id="password" placeholder="Password" onblur="validatePassword(this.value)">
        <span id="passwordErrors" style="color: red;"></span>

        <label for="">Referral code(optional)</label>
         <input type="text" name="referralCode" id="referralCode" placeholder="Referral Code"
            onblur="validateReferralCode(this.value)">
        <span id="referralCodeError" style="color: red;"></span>

        <button type="submit">Sign Up</button>
    </form>

    <script>
        async function validateReferralCode() {
            const referralCode = document.getElementById("referralCode").value;
            const referralCodeError = document.getElementById("referralCodeError");

            try {
                const response = await fetch("/checkreferralCodeExist", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ referralCode })
                });

                const data = await response.json();

                if (data.notExists) {
                    referralCodeError.textContent = "ReferralCode Not Exists.";
                    document.getElementById("referralCode").style.border = "1px solid red";
                } else {
                    usernameError.textContent = "";
                    document.getElementById("username").style.border = "1px solid #ccc";
                }
            } catch (error) {
                console.error("Error validating username:", error);
            }
        }
        async function validateUsername() {
            const username = document.getElementById("username").value;
            const usernameError = document.getElementById("usernameError");

            try {
                const response = await fetch("/checkUserExist", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ username })
                });

                const data = await response.json();

                if (data.exists) {
                    usernameError.textContent = "Username already exists.";
                    document.getElementById("username").style.border = "1px solid red";
                } else {
                    usernameError.textContent = "";
                    document.getElementById("username").style.border = "1px solid #ccc";
                }
            } catch (error) {
                console.error("Error validating username:", error);
            }
        }

        async function validateEmail(email) {
            const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            const emailInput = document.getElementById("email");
            const emailError = document.getElementById("emailError");

            if (!emailPattern.test(email)) {
                emailInput.style.border = "1px solid red";
                emailError.textContent = "Please enter a valid email address";
                return;
            }

            try {
                const response = await fetch("/checkUserExist", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ email })
                });

                const data = await response.json();

                if (data.exists) {
                    emailInput.style.border = "1px solid red";
                    emailError.textContent = "Email already exists.";
                } else {
                    emailInput.style.border = "1px solid #ccc";
                    emailError.textContent = "";
                }
            } catch (error) {
                console.error("Error validating email:", error);
            }
        }

        async function validateMobileNumber(mobileNumber) {
            const mobileNumberPattern = /^\d{10}$/;
            const mobileNumberInput = document.getElementById("mobileNumber");
            const mobileNumberError = document.getElementById("mobileNumberError");

            if (!mobileNumberPattern.test(mobileNumber)) {
                mobileNumberError.textContent = "Mobile number must have exactly 10 digits and contain no alphabet or symbols.";
                mobileNumberInput.style.border = "1px solid red";
                return;
            }

            try {
                const response = await fetch("/checkUserExist", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ mobileNumber })
                });

                const data = await response.json();

                if (data.exists) {
                    mobileNumberInput.style.border = "1px solid red";
                    mobileNumberError.textContent = "Mobile number already exists.";
                } else {
                    mobileNumberInput.style.border = "1px solid #ccc";
                    mobileNumberError.textContent = "";
                }
            } catch (error) {
                console.error("Error validating mobile number:", error);
            }
        }

        function validatePassword(password) {
            const passwordInput = document.getElementById("password");
            const passwordErrors = document.getElementById("passwordErrors");

            // Reset error messages
            passwordErrors.innerHTML = "";

            // Check length
            if (password.length < 8) {
                passwordErrors.innerHTML += "Password must have at least 8 characters";
            }

            // Check for at least one digit
            if (!/\d/.test(password)) {
                passwordErrors.innerHTML += ", and contain at least one digit";
            }

            // Check for at least one uppercase letter
            if (!/[A-Z]/.test(password)) {
                passwordErrors.innerHTML += ", one uppercase letter";
            }

            // Check for at least one symbol
            if (!/[^a-zA-Z0-9]/.test(password)) {
                passwordErrors.innerHTML += ", one symbol<br>";
            }

            // If there are errors, display them and set border color to red
            if (passwordErrors.innerHTML !== "") {
                passwordInput.style.border = "1px solid red";
            } else {
                // If no errors, reset border color
                passwordInput.style.border = "1px solid #ccc";
            }
        }

        document.getElementById("signupForm").addEventListener("submit", async function (event) {
            event.preventDefault();

            // Additional validation before submission if necessary
            const username = document.getElementById("username").value;
            const email = document.getElementById("email").value;
            const fname = document.getElementById("fname").value;
            const lname = document.getElementById("lname").value;
            const mobileNumber = document.getElementById("mobileNumber").value;
            const image = document.getElementById("img").files[0];
            const password = document.getElementById("password").value;

            let isValid = true;

            if (!username) {
                document.getElementById("usernameError").textContent = "Username is required.";
                isValid = false;
            }

            if (!email) {
                document.getElementById("emailError").textContent = "Email is required.";
                isValid = false;
            }

            if (!fname) {
                document.getElementById("fnameError").textContent = "First Name is required.";
                isValid = false;
            }else{
                document.getElementById("fnameError").textContent = "";
            }

            if (!lname) {
                document.getElementById("lnameError").textContent = "Last Name is required.";
                isValid = false;
            }else{
                document.getElementById("lnameError").textContent = "";
            }

            if (!mobileNumber) {
                document.getElementById("mobileNumberError").textContent = "Mobile Number is required.";
                isValid = false;
            }

            if (!image) {
                document.getElementById("imageError").textContent = "Image is required.";
                isValid = false;
            }

            if (!password) {
                document.getElementById("passwordErrors").textContent = "Password is required.";
                isValid = false;
            }

            if (isValid) {
                const formData = new FormData(this);

                try {
                    const response = await fetch("/signup", {
                        method: "POST",
                        body: formData
                    });

                    const result = await response.json();
                       const userId=result.userId
                    if (result.success) {
                        window.location.href = `/otp?id=${userId}`; // Redirect on success
                    } else {
                        // Handle specific error cases here if necessary
                        console.error("Error signing up:", result.message);
                    }
                } catch (error) {
                    console.error("Error signing up:", error);
                }
            } else {
                // Handle the case where some fields are not valid
                console.error("Form fields are not valid.");
            }
        });
    </script>
</body>

</html>
